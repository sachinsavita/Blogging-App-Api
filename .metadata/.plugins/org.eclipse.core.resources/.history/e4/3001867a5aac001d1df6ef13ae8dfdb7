package com.blogapp.controllers;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.blogapp.payloads.UserDTO;
import com.blogapp.services.UserService;

@RestController
@RequestMapping("/api/users")
public class UserController {
	
	@Autowired
	private UserService userService;
	//post-create user
	@PostMapping("/")
	public ResponseEntity<UserDTO> createUser(@RequestBody UserDTO userDto)
	{
		
		UserDTO createdUserDto = userService.createUser(userDto);
		return new ResponseEntity<>(createdUserDto, HttpStatus.CREATED);
	}
	//put-update user
	@PutMapping("/{userId}")
	public ResponseEntity<UserDTO> updateUser(@RequestBody UserDTO userDto,@PathVariable("userId") Integer uid)
	{
		UserDTO updatedUser = userService.updateUser(userDto, uid);
		
		return new ResponseEntity<>(updatedUser, HttpStatus.OK);
	}
	
	//delete-delete user
	@DeleteMapping("/{userId}")
	public ResponseEntity<UserDTO> deletedUser(@RequestBody UserDTO userDto, @PathVariable Integer userId)
	{
		UserDTO deletedUser = userService.deleteUser(userId);
		return new ResponseEntity<>(deletedUser, HttpStatus.GONE);
	}
	//get- get user/users
	@GetMapping("/")
	public ResponseEntity<List<UserDTO>> getAllUsers()
	{
		List<UserDTO> allUsers = 	userService.getAllUsers();
		return new ResponseEntity<>(allUsers, HttpStatus.OK);
	}
	
	@GetMapping("/{userId}")
	public ResponseEntity<UserDTO> userById(@PathVariable Integer userId)
	{
		UserDTO userById = userService.getUserById(userId);
		return new ResponseEntity<>(userById, HttpStatus.OK);	
	}
	
	

}
